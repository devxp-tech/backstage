app:
  title: DevXP Technologies
  baseUrl: https://backstage.devxp-tech.io

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: https://backstage.devxp-tech.io
  listen:
    port: 7007
    host: 0.0.0.0

  csp:
    connect-src: ["'self'", "http:", "https:"]
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false

  cors:
    origin: https://backstage.devxp-tech.io
    #methods: [GET, POST, PUT, DELETE]
    #credentials: true
  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      database: ${POSTGRES_DATABASE}
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
    # ensureExists: true
    pluginDivisionMode: schema

  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: ${K8S_URL}
          name: lgseksd1
          authProvider: serviceAccount
          skipTLSVerify: true
          # skipMetricsLookup: true
          serviceAccountToken: ${K8S_TOKEN}
          customResources:
            - group: "argoproj.io"
              apiVersion: "v1alpha1"
              plural: "rollouts"
            - group: "argoproj.io"
              apiVersion: "v1alpha1"
              plural: "applications"
            - group: "argoproj.io"
              apiVersion: "v1alpha1"
              plural: "appprojects"
            - group: "networking.istio.io"
              apiVersion: "v1beta1"
              plural: "virtualservices"

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach

techdocs:
  builder: "external" # Alternatives - 'external'
  # generator:
  #   runIn: 'docker'
  publisher:
    type: "awsS3"
    awsS3:
      bucketName: ${TECHDOCS_BUCKET}
      region: ${AWS_REGION}
      credentials:
        accessKeyId: ${AWS_ACCESS_KEY_ID}
        secretAccessKey: ${AWS_SECRET_ACCESS_KEY}

auth:
  environment: production
  ### Providing an auth.session.secret will enable session support in the auth-backend
  # session:
  #   secret: custom session secret
  providers:
    github:
      production:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
