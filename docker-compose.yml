version: "3.8"
services:
  test: &defaults
    image: backstage:dev
    restart: always
    build:
      context: .
      target: build
    working_dir: /app
    command: 'yarn test:all'
    # command: sh -c 'echo Sucess!'
    environment:
      - ENVIRONMENT=development
    volumes:
      - ./app:/app

  app:
    <<: *defaults
    command: sh -c 'yarn dev'
    hostname: backstage.local
    ports:
      - 3000:3000
      - 7007:7007
    environment:
      - ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATABASE=backstage
      - GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN
      - AUTH_GITHUB_CLIENT_ID=$AUTH_GITHUB_CLIENT_ID
      - AUTH_GITHUB_CLIENT_SECRET=$AUTH_GITHUB_CLIENT_SECRET
      - POSTGRES_DATABASE=backstage
      - SONARQUBE_TOKEN=$SONARQUBE_TOKEN
      - GIT_DISCOVERY_ACROSS_FILESYSTEM=1
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_REGION=$AWS_REGION
      - TECHDOCS_BUCKET=$TECHDOCS_BUCKET
    depends_on:
      - postgres

  prd:
    <<: *defaults
    image: backstage:prd-local
    build:
      context: .
    volumes: []
    command: sh -c "node packages/backend --config app-config.yaml"

  cmd:
    <<: *defaults
    working_dir:  /app
    volumes:
      - ./app:/app

  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=backstage
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432

volumes:
  pgdata: {}